!function r(a,i,s){function o(n,e){if(!i[n]){if(!a[n]){var t="function"==typeof require&&require;if(!e&&t)return t(n,!0);if(l)return l(n,!0);throw(e=new Error("Cannot find module '"+n+"'")).code="MODULE_NOT_FOUND",e}t=i[n]={exports:{}},a[n][0].call(t.exports,function(e){return o(a[n][1][e]||e)},t,t.exports,r,a,i,s)}return i[n].exports}for(var l="function"==typeof require&&require,e=0;e<s.length;e++)o(s[e]);return o}({1:[function(e,n,t){var r=".starter-kit-container {\n  padding: 10px;\n  background-color: #bada55;\n}\n.btn-uniprot,\n.btn-pick-random,\n.btn-minerva {\n  margin-bottom: 5px;\n}\n/*# sourceMappingURL=styles.css.map */\n";e("browserify-css").createStyle(r,{href:"__tmp_minerva_plugin/css/styles.css"},{insertAt:"bottom"}),n.exports=r},{"browserify-css":3}],2:[function(e,n,t){"use strict";e("../css/styles.css");var r;e=window.minerva.registerPlugin({pluginName:"starter-kit",pluginVersion:"1.0.1",pluginUrl:"https://raw.githubusercontent.com/mateusz-winiarczyk/xx/main/plugin.js"}).element,r=e,console.log("plugCOnta",r),e=document.createElement("div"),r.append(e),e.append('\n        <div class="panel panel-default card panel-events mb-2">\n            <div class="panel-heading card-header">Events (Select an element in the map)</div>\n            <div class="panel-body card-body">\n            </div>\n        </div>\n    '),e.append('<button type="button" class="btn-focus btn btn-primary btn-default btn-block">Focus</button>'),e.append('<button type="button" class="btn-highlight btn btn-primary btn-default btn-block">Highlight (icon)</button>'),e.append("<hr>"),e.append('<button type="button" class="btn-pick-random btn btn-primary btn-default btn-block">Retrieve random object from map</button>'),e.append('\n        <div class="panel panel-default card panel-randomly-picked mb-2">\n            <div class="panel-heading card-header">Randomly picked object</div>\n            <div class="panel-body card-body">\n            </div>\n        </div>\n    '),e.append('<button type="button" class="btn-focus-random btn btn-primary btn-default btn-block">Focus</button>'),e.append('<button type="button" class="btn-highlight-random btn btn-primary btn-default btn-block">Highlight (surface)</button>'),e.append("<hr>"),e.append("<h4>Query UniProt API</h4>"),e.append('<button type="button" class="btn-uniprot btn btn-primary btn-default btn-block" title="Queries UniProt using the element selected from the map">Retrieve from UniProt</button>'),e.append('\n        <div class="panel panel-default card panel-uniprot">\n            <div class="panel-heading card-header">Uniprot records for the selected element</div>\n            <div class="panel-body card-body">\n                <code></code>\n            </div>\n        </div>\n    '),e.append("<hr>"),e.append("<h4>Query Minerva API</h4>"),e.append('\n        <form class="form-horizontal">\n            <div class="form-group row">\n                <label class="col-sm-2 control-label">Address</label>\n                <div class="col-sm-10">\n                    <input class="input-minerva-address form-control" value="https://minerva-dev.lcsb.uni.lu/minerva">\n                </div>\n            </div>\n            <div class="form-group row">\n                <label class="col-sm-2 control-label">Project ID</label>\n                <div class="col-sm-10">\n                    <input class="input-minerva-projectid form-control" value="sample">\n                </div>\n            </div>\n        </form>\n        <button type="button" class="btn-minerva btn btn-primary btn-default btn-block">Retrieve from Minerva</button>\n        <div class="panel panel-default card panel-minerva">\n            <div class="panel-heading card-header">Names of elements</div>\n            <div class="panel-body card-body">\n            </div>\n        </div>\n    ')},{"../css/styles.css":1}],3:[function(e,n,t){"use strict";function s(e,n){var t=document.head||document.getElementsByTagName("head")[0],r=a[a.length-1];if((n=n||{}).insertAt=n.insertAt||"bottom","top"===n.insertAt)r?r.nextSibling?t.insertBefore(e,r.nextSibling):t.appendChild(e):t.insertBefore(e,t.firstChild),a.push(e);else{if("bottom"!==n.insertAt)throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");t.appendChild(e)}}var a=[];n.exports={createLink:function(e,n){var t,r,a=document.head||document.getElementsByTagName("head")[0],i=document.createElement("link");for(t in i.href=e,i.rel="stylesheet",n)n.hasOwnProperty(t)&&(r=n[t],i.setAttribute("data-"+t,r));a.appendChild(i)},createStyle:function(e,n,t){t=t||{};var r,a,i=document.createElement("style");for(r in i.type="text/css",n)n.hasOwnProperty(r)&&(a=n[r],i.setAttribute("data-"+r,a));i.sheet?(i.innerHTML=e,i.sheet.cssText=e,s(i,{insertAt:t.insertAt})):i.styleSheet?(s(i,{insertAt:t.insertAt}),i.styleSheet.cssText=e):(i.appendChild(document.createTextNode(e)),s(i,{insertAt:t.insertAt}))}}},{}]},{},[2]);
